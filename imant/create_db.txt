Start Query: select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
{'name': u'folders'}
Query Complete!
Total Time: 0.000000
Col ('relname',)
Start Query: select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
{'name': u'users'}
Query Complete!
Total Time: 0.000000
Col ('relname',)
Start Query: select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
{'name': u'labels'}
Query Complete!
Total Time: 0.000000
Col ('relname',)
Start Query: select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
{'name': u'participants'}
Query Complete!
Total Time: 0.000000
Col ('relname',)
Start Query: select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
{'name': u'studyparticipants'}
Query Complete!
Total Time: 0.001000
Col ('relname',)
Start Query: select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
{'name': u'images'}
Query Complete!
Total Time: 0.001000
Col ('relname',)
Start Query: select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
{'name': u'useraccess'}
Query Complete!
Total Time: 0.000000
Col ('relname',)
Start Query: select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
{'name': u'studies'}
Query Complete!
Total Time: 0.000000
Col ('relname',)
Start Query: select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
{'name': u'events'}
Query Complete!
Total Time: 0.000000
Col ('relname',)
Start Query: select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
{'name': u'schemas'}
Query Complete!
Total Time: 0.001000
Col ('relname',)
Start Query: 
CREATE TABLE users (
	user_id SERIAL NOT NULL, 
	username VARCHAR(50), 
	password VARCHAR(128), 
	salt VARCHAR(32), 
	admin BOOLEAN, 
	PRIMARY KEY (user_id), 
	UNIQUE (username)
)



CREATE TABLE users (
	user_id SERIAL NOT NULL, 
	username VARCHAR(50), 
	password VARCHAR(128), 
	salt VARCHAR(32), 
	admin BOOLEAN, 
	PRIMARY KEY (user_id), 
	UNIQUE (username)
)


{}
Query Complete!
Total Time: 0.058000
COMMIT
Start Query: 
CREATE TABLE participants (
	participant_id SERIAL NOT NULL, 
	name VARCHAR(50) NOT NULL, 
	PRIMARY KEY (participant_id)
)



CREATE TABLE participants (
	participant_id SERIAL NOT NULL, 
	name VARCHAR(50) NOT NULL, 
	PRIMARY KEY (participant_id)
)


{}
Query Complete!
Total Time: 0.021000
COMMIT
Start Query: 
CREATE TABLE studies (
	study_id SERIAL NOT NULL, 
	name VARCHAR(256), 
	PRIMARY KEY (study_id)
)



CREATE TABLE studies (
	study_id SERIAL NOT NULL, 
	name VARCHAR(256), 
	PRIMARY KEY (study_id)
)


{}
Query Complete!
Total Time: 0.025000
COMMIT
Start Query: 
CREATE TABLE schemas (
	schema_id SERIAL NOT NULL, 
	name VARCHAR(50), 
	PRIMARY KEY (schema_id)
)



CREATE TABLE schemas (
	schema_id SERIAL NOT NULL, 
	name VARCHAR(50), 
	PRIMARY KEY (schema_id)
)


{}
Query Complete!
Total Time: 0.016000
COMMIT
Start Query: 
CREATE TABLE folders (
	id SERIAL NOT NULL, 
	parent_id INTEGER, 
	name VARCHAR(255) NOT NULL, 
	schema_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(parent_id) REFERENCES folders (id), 
	FOREIGN KEY(schema_id) REFERENCES schemas (schema_id)
)



CREATE TABLE folders (
	id SERIAL NOT NULL, 
	parent_id INTEGER, 
	name VARCHAR(255) NOT NULL, 
	schema_id INTEGER NOT NULL, 
	PRIMARY KEY (id), 
	FOREIGN KEY(parent_id) REFERENCES folders (id), 
	FOREIGN KEY(schema_id) REFERENCES schemas (schema_id)
)


{}
Query Complete!
Total Time: 0.033000
COMMIT
Start Query: 
CREATE TABLE studyparticipants (
	study_id INTEGER, 
	participant_id INTEGER, 
	UNIQUE (study_id, participant_id), 
	FOREIGN KEY(study_id) REFERENCES studies (study_id), 
	FOREIGN KEY(participant_id) REFERENCES participants (participant_id)
)



CREATE TABLE studyparticipants (
	study_id INTEGER, 
	participant_id INTEGER, 
	UNIQUE (study_id, participant_id), 
	FOREIGN KEY(study_id) REFERENCES studies (study_id), 
	FOREIGN KEY(participant_id) REFERENCES participants (participant_id)
)


{}
Query Complete!
Total Time: 0.016000
COMMIT
Start Query: 
CREATE TABLE useraccess (
	user_id INTEGER, 
	study_id INTEGER, 
	access_level INTEGER NOT NULL, 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(study_id) REFERENCES studies (study_id)
)



CREATE TABLE useraccess (
	user_id INTEGER, 
	study_id INTEGER, 
	access_level INTEGER NOT NULL, 
	FOREIGN KEY(user_id) REFERENCES users (user_id), 
	FOREIGN KEY(study_id) REFERENCES studies (study_id)
)


{}
Query Complete!
Total Time: 0.003000
COMMIT
Start Query: 
CREATE TABLE labels (
	label_id SERIAL NOT NULL, 
	schema_id INTEGER NOT NULL, 
	folder_id INTEGER, 
	name VARCHAR(256), 
	color VARCHAR(50), 
	PRIMARY KEY (label_id), 
	FOREIGN KEY(schema_id) REFERENCES schemas (schema_id), 
	FOREIGN KEY(folder_id) REFERENCES folders (id)
)



CREATE TABLE labels (
	label_id SERIAL NOT NULL, 
	schema_id INTEGER NOT NULL, 
	folder_id INTEGER, 
	name VARCHAR(256), 
	color VARCHAR(50), 
	PRIMARY KEY (label_id), 
	FOREIGN KEY(schema_id) REFERENCES schemas (schema_id), 
	FOREIGN KEY(folder_id) REFERENCES folders (id)
)


{}
Query Complete!
Total Time: 0.013000
COMMIT
Start Query: 
CREATE TABLE events (
	event_id SERIAL NOT NULL, 
	participant_id INTEGER NOT NULL, 
	label_id INTEGER, 
	start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	comment TEXT, 
	number_times_viewed INTEGER, 
	PRIMARY KEY (event_id), 
	FOREIGN KEY(participant_id) REFERENCES participants (participant_id), 
	FOREIGN KEY(label_id) REFERENCES labels (label_id)
)



CREATE TABLE events (
	event_id SERIAL NOT NULL, 
	participant_id INTEGER NOT NULL, 
	label_id INTEGER, 
	start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	comment TEXT, 
	number_times_viewed INTEGER, 
	PRIMARY KEY (event_id), 
	FOREIGN KEY(participant_id) REFERENCES participants (participant_id), 
	FOREIGN KEY(label_id) REFERENCES labels (label_id)
)


{}
Query Complete!
Total Time: 0.026000
COMMIT
Start Query: 
CREATE TABLE images (
	image_id SERIAL NOT NULL, 
	image_time TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	participant_id INTEGER NOT NULL, 
	event_id INTEGER, 
	full_url VARCHAR(256), 
	medium_url VARCHAR(256), 
	thumbnail_url VARCHAR(256), 
	PRIMARY KEY (image_id), 
	FOREIGN KEY(participant_id) REFERENCES participants (participant_id), 
	FOREIGN KEY(event_id) REFERENCES events (event_id)
)



CREATE TABLE images (
	image_id SERIAL NOT NULL, 
	image_time TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	participant_id INTEGER NOT NULL, 
	event_id INTEGER, 
	full_url VARCHAR(256), 
	medium_url VARCHAR(256), 
	thumbnail_url VARCHAR(256), 
	PRIMARY KEY (image_id), 
	FOREIGN KEY(participant_id) REFERENCES participants (participant_id), 
	FOREIGN KEY(event_id) REFERENCES events (event_id)
)


{}
Query Complete!
Total Time: 0.028000
COMMIT
